//  Расш6270_Отладка.СохранитьЗапрос(Запрос, "E:\zapros")

Функция СохранитьЗапрос(Запрос, ИмяКаталогаИлиПолноеИмяФайла) Экспорт
	
	Попытка
		ИмяКаталогаСоСлэшем = ИмяКаталогаИлиПолноеИмяФайла + ?(Прав(ИмяКаталогаИлиПолноеИмяФайла,1)="\", "", "\");
		ИмяЗапроса = "Запрос_"+Формат(ТекущаяДата(), "ДФ=гггг-ММ-дд_ЧЧ-мм-сс");
		ПолноеИмяФайла  = ИмяКаталогаСоСлэшем + ИмяЗапроса + ".q1c";
		
		МассивСоздаваемыхВТекстеЗапросаВТ = МассивСоздаваемыхВременныхТаблицЗапроса(Запрос.Текст);
		
		//Добавим в начало текста запроса выборку во временные таблицы
		ТекстВыборкиВоВременныеТаблицы = "";
		МассивДанныхПоВременнымТаблицам = Новый Массив;
		Если Запрос.МенеджерВременныхТаблиц <> Неопределено Тогда
			Для Каждого ВременнаяТаблица Из Запрос.МенеджерВременныхТаблиц.Таблицы Цикл
				//Исключим временные таблицы, которые создаются в тексте этого запроса
				Если МассивСоздаваемыхВТекстеЗапросаВТ.Найти(ВременнаяТаблица.ПолноеИмя) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТекРезультатЗапроса = ВременнаяТаблица.ПолучитьДанные();
				ТаблицаПустая = ТекРезультатЗапроса.Пустой();
				//Если временная таблица пустая, то в текст выборки добавим создание этой таблицы, но в МассивРезультатовВТ записывать не будем
				ТекстВыборкиВоВременныеТаблицы = ТекстВыборкиВоВременныеТаблицы + ПолучитьТекстВыборкиКолонокТаблицыЗначенийВЗапросе(ВременнаяТаблица.ПолноеИмя, ТекРезультатЗапроса.Колонки, ТаблицаПустая);
				Если НЕ ТаблицаПустая Тогда
					МассивДанныхПоВременнымТаблицам.Добавить(Новый Структура("ИмяВременнойТаблица,РезультатЗапроса", ВременнаяТаблица.ПолноеИмя, ТекРезультатЗапроса));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ПолноеИмяФайла, "utf-8");
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("querylist");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("query");
		ЗаписьXML.ЗаписатьАтрибут("name", ИмяЗапроса);
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("text");
		ЗаписьXML.ЗаписатьТекст(ТекстВыборкиВоВременныеТаблицы + Запрос.Текст);
		ЗаписьXML.ЗаписатьКонецЭлемента(); //text
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("parameters");
		
		Для Каждого КЗ Из Запрос.Параметры Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("parameter");
			ЗаписьXML.ЗаписатьАтрибут("name", КЗ.Ключ);
			
			ЗначениеПараметра = КЗ.Значение;
			ТипЗнчПараметра = ТипЗнч(ЗначениеПараметра);
			
			Если ТипЗнчПараметра  = Тип("Граница") Тогда
				ЗаписьXML.ЗаписатьАтрибут("type", "Граница");
				ЗаписьXML.ЗаписатьНачалоЭлемента("divide");
				ЗаписьXML.ЗаписатьАтрибут("type", "Дата");
				ЗаписьXML.ЗаписатьАтрибут("valueDiv", Строка(ЗначениеПараметра.ВидГраницы));
				ЗаписьXML.ЗаписатьАтрибут("value", XMLСтрока(ЗначениеПараметра.Значение));
				ЗаписьXML.ЗаписатьКонецЭлемента(); //divide
				
			ИначеЕсли ТипЗнчПараметра = Тип("МоментВремени") Тогда
				ЗаписьXML.ЗаписатьАтрибут("type", "МоментВремени");
				ЗаписьXML.ЗаписатьНачалоЭлемента("item");
				ЗаписьXML.ЗаписатьАтрибут("type", XMLТипЗнч(ЗначениеПараметра.Ссылка).ИмяТипа);
				ЗаписьXML.ЗаписатьАтрибут("valueRef", XMLСтрока(ЗначениеПараметра.Ссылка));
				ЗаписьXML.ЗаписатьАтрибут("valueDate", XMLСтрока(ЗначениеПараметра.Дата));
				ЗаписьXML.ЗаписатьКонецЭлемента(); //item
				
			ИначеЕсли ТипЗнчПараметра = Тип("СписокЗначений") Тогда
				ЗаписьXML.ЗаписатьАтрибут("type", "СписокЗначений");
				ЗаписатьЗначенияМассиваДляЭлементаПараметр(ЗаписьXML, ЗначениеПараметра.ВыгрузитьЗначения());
				
			ИначеЕсли ТипЗнчПараметра = Тип("Массив") Тогда
				ЗаписьXML.ЗаписатьАтрибут("type", "СписокЗначений");
				ЗаписатьЗначенияМассиваДляЭлементаПараметр(ЗаписьXML, ЗначениеПараметра);
				
			ИначеЕсли ТипЗнчПараметра = Тип("ТаблицаЗначений") Тогда
				ЗаписьXML.ЗаписатьАтрибут("type", "ТаблицаЗначений");
				ЗаписатьТаблицуЗначенийВПараметрЗапроса(ЗаписьXML, ЗначениеПараметра, Ложь);
				
			Иначе
				ЗаписьXML.ЗаписатьАтрибут("type", ПолучитьИмяТипаЗначенияXML(ЗначениеПараметра));
				ЗаписьXML.ЗаписатьАтрибут("value", XMLСтрока(ЗначениеПараметра));
				
			КонецЕсли;
			
			ЗаписьXML.ЗаписатьКонецЭлемента(); //parameter
		КонецЦикла;
		
		//Все не пустые временные таблицы, создание которых мы добавили ранее к тексту запроса, запишем в параметры запроса как таблицы значений
		Если Запрос.МенеджерВременныхТаблиц <> Неопределено Тогда
			Для Каждого ТекСтрока Из МассивДанныхПоВременнымТаблицам Цикл
				тзВременнаяТаблица = ТекСтрока.РезультатЗапроса.Выгрузить();
				ЗаписатьТаблицуЗначенийВПараметрЗапроса(ЗаписьXML, тзВременнаяТаблица, Истина, ТекСтрока.ИмяВременнойТаблица);
			КонецЦикла;
		КонецЕсли;					
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); //parameters
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); //query
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); //querylist
		
		ЗаписьXML.Закрыть();
		
		Возврат "Запрос с параметрами успешно сохранен в файл " + ПолноеИмяФайла;
		
	Исключение
		Возврат "Не удалось записать запрос с параметрами в файл по причине: " + ОписаниеОшибки();
		
	КонецПопытки;
	
КонецФункции

Функция ПолучитьИмяТипаЗначенияXML(ЗначениеПараметра)
	
	ТипЗнчПараметра = ТипЗнч(ЗначениеПараметра);
	
	Если ТипЗнчПараметра = Тип("Строка") ИЛИ ТипЗнчПараметра = Тип("Неопределено") Тогда
		Возврат "Строка";
		
	ИначеЕсли ТипЗнчПараметра = Тип("Число") Тогда
		Возврат "Число";
		
	ИначеЕсли ТипЗнчПараметра = Тип("Дата") Тогда
		Возврат "Дата";
		
	ИначеЕсли ТипЗнчПараметра = Тип("Булево") Тогда
		Возврат "Булево";
		
	Иначе
		Возврат XMLТипЗнч(ЗначениеПараметра).ИмяТипа;
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаписатьЗначенияМассиваДляЭлементаПараметр(ЗаписьXML, Массив)
	
	Для Каждого ТекущееЗначение Из Массив Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("item");
		
		ЗаписьXML.ЗаписатьАтрибут("type", ПолучитьИмяТипаЗначенияXML(ТекущееЗначение));
		ЗаписьXML.ЗаписатьАтрибут("value", XMLСтрока(ТекущееЗначение));
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); //item
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьТаблицуЗначенийВПараметрЗапроса(ЗаписьXML, Таблица, ПараметрЦеликом, ИмяПараметра="")
	
	Если ПараметрЦеликом Тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("parameter");
		ЗаписьXML.ЗаписатьАтрибут("name", ИмяПараметра);
		ЗаписьXML.ЗаписатьАтрибут("type", "ТаблицаЗначений");
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьАтрибут("colcount", Формат(Таблица.Колонки.Количество(), "ЧН=0; ЧГ=0"));
	ЗаписьXML.ЗаписатьАтрибут("rowcount", Формат(Таблица.Количество(), "ЧН=0; ЧГ=0"));
	
	ТекИндексСтроки = 0;
	Для Каждого ТекСтрокаТЗ Из Таблица Цикл
		ТекИндексКолонки = 0;
		Для Каждого ТекКолонкаТЗ Из Таблица.Колонки Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("item");
			
			ТекущееЗначение = ТекСтрокаТЗ[ТекКолонкаТЗ.Имя];
			
			ЗаписьXML.ЗаписатьАтрибут("nameCol", ТекКолонкаТЗ.Имя);
			ЗаписьXML.ЗаписатьАтрибут("row", Формат(ТекИндексСтроки, "ЧН=0; ЧГ=0"));
			ЗаписьXML.ЗаписатьАтрибут("col", Формат(ТекИндексКолонки, "ЧН=0; ЧГ=0"));
			ЗаписьXML.ЗаписатьАтрибут("type", ПолучитьИмяТипаЗначенияXML(ТекущееЗначение));
			ЗаписьXML.ЗаписатьАтрибут("length", "0");
			ЗаписьXML.ЗаписатьАтрибут("value", XMLСтрока(ТекущееЗначение));
			
			ЗаписьXML.ЗаписатьКонецЭлемента(); //item
			
			ТекИндексКолонки = ТекИндексКолонки + 1;
		КонецЦикла;
		
		ТекИндексСтроки = ТекИндексСтроки + 1;
	КонецЦикла;
	
	Если ПараметрЦеликом Тогда
		ЗаписьXML.ЗаписатьКонецЭлемента(); //parameter
	КонецЕсли;
КонецПроцедуры

Функция МассивСоздаваемыхВременныхТаблицЗапроса(ТекстЗапроса)
	
	Перем МассивВТ;
	
	МассивВТ = Новый Массив;
	
	//Запрос может не открываться объектом СхемаЗапроса, но при этом выполняться,
	//в этой ситуации лучше вернуть пустой массив, чем завершить работу с ошибкой
	Попытка
		СхемаЗапроса = Новый СхемаЗапроса();
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		Для Каждого Пакет Из СхемаЗапроса.ПакетЗапросов Цикл
			Если ТипЗнч(Пакет) = Тип("ЗапросВыбораСхемыЗапроса") Тогда
				Если ЗначениеЗаполнено(Пакет.ТаблицаДляПомещения) Тогда
					МассивВТ.Добавить(Пакет.ТаблицаДляПомещения);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Возврат МассивВТ;
	
КонецФункции

Функция ПолучитьТекстВыборкиКолонокТаблицыЗначенийВЗапросе(ИмяПараметра, Колонки, ПустаяТаблица)
	
	Перем Текст;
	
	ПоляТаблицы = "";
	Для Каждого ТекКолонка Из Колонки Цикл
		Если ПоляТаблицы <> "" Тогда
			ПоляТаблицы = ПоляТаблицы + "
			|	";
		Иначе
			ПоляТаблицы = ПоляТаблицы + "	";
		КонецЕсли;
		
		СтруктураТипа = СтруктураТипаКолонкиДляЗапроса(ТекКолонка.ТипЗначения.Типы());
		
		Если ПустаяТаблица Тогда
			ПоляТаблицы = ПоляТаблицы + СтруктураТипа.ЗначениеПоУмолчанию + " КАК "+ТекКолонка.Имя + ",";
			
		Иначе
			Если СтруктураТипа.ИмяДляПриведенияТипов <> "" Тогда
				ПоляТаблицы = ПоляТаблицы + "ВЫРАЗИТЬ(Т."+ТекКолонка.Имя + " КАК "+СтруктураТипа.ИмяДляПриведенияТипов+") КАК "+ТекКолонка.Имя + ",";
			Иначе
				ПоляТаблицы = ПоляТаблицы + "Т."+ТекКолонка.Имя + " КАК "+ТекКолонка.Имя + ",";
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	//Уберем последнюю запятую
	ПоляТаблицы = Лев(ПоляТаблицы, СтрДлина(ПоляТаблицы)-1);
	
	Текст = 
	"ВЫБРАТЬ
	|"+ПоляТаблицы+"
	|ПОМЕСТИТЬ "+ИмяПараметра;
	
	Если НЕ ПустаяТаблица Тогда
		Текст = Текст + "
		|ИЗ
		|	&"+ИмяПараметра+" КАК Т"
		;
	КонецЕсли;
	
	Текст = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат Текст;
	
КонецФункции

Функция СтруктураТипаКолонкиДляЗапроса(МассивТиповКолонки)
	
	Перем Результат;
	
	Результат = Новый Структура;
	Результат.Вставить("ЗначениеПоУмолчанию", "НЕОПРЕДЕЛЕНО");
	Результат.Вставить("ИмяДляПриведенияТипов", "");
	
	//Если колонка имеет единственный тип, либо 2 типа, один из которых Null, то в запросе выборки во временную таблицу будем приводить к этому типу, 
	//чтобы избежать ошибок открытия конструктора запросов, если дальше где-то идет выбор "через точку"
	ЕдинственныйТип = Неопределено;
	Если МассивТиповКолонки.Количество() = 1 Тогда
		ЕдинственныйТип = МассивТиповКолонки[0];
		
	ИначеЕсли МассивТиповКолонки.Количество() = 2 Тогда
		Если МассивТиповКолонки[0] = Тип("Null") Тогда
			ЕдинственныйТип = МассивТиповКолонки[1];
			
		ИначеЕсли МассивТиповКолонки[1] = Тип("Null") Тогда
			ЕдинственныйТип = МассивТиповКолонки[0];
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЕдинственныйТип <> Неопределено Тогда
		
		Если ЕдинственныйТип = Тип("Число") Тогда
			Результат.ЗначениеПоУмолчанию = "0";
			
		ИначеЕсли ЕдинственныйТип = Тип("Строка") Тогда
			Результат.ЗначениеПоУмолчанию = """""";
			
		ИначеЕсли ЕдинственныйТип = Тип("Дата") Тогда
			Результат.ЗначениеПоУмолчанию = "ДАТАВРЕМЯ(1,1,1)";
			
		ИначеЕсли ЕдинственныйТип = Тип("Булево") Тогда
			Результат.ЗначениеПоУмолчанию = "ЛОЖЬ";
			
		ИначеЕсли ЕдинственныйТип = Тип("ВидДвиженияНакопления") Тогда
			Результат.ЗначениеПоУмолчанию = "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
			
		Иначе
			ИмяТипаXML = XMLТип(ЕдинственныйТип);
			Если СтрНайти(ИмяТипаXML, "Ref.") > 0 Тогда
				ПустаяСсылка = Новый(ЕдинственныйТип);
				ПолноеИмяМетаданного = ПустаяСсылка.Метаданные().ПолноеИмя();
				Если ЗначениеЗаполнено(ПолноеИмяМетаданного) Тогда
					Результат.ЗначениеПоУмолчанию = "ЗНАЧЕНИЕ("+ПолноеИмяМетаданного+".ПустаяСсылка)";
					Результат.ИмяДляПриведенияТипов = ПолноеИмяМетаданного;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции