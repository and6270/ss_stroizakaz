&ИзменениеИКонтроль("ЗаполнитьТабличныйДокументЗаказаНаТоварыУслугиАдаптированДляПеревода")
Процедура Расш6270_ЗаполнитьТабличныйДокументЗаказаНаТоварыУслугиАдаптированДляПеревода(ТабличныйДокумент, ПараметрыЗаполненияПФ, ОбъектыПечати, ПервыйДокумент, КодЯзыка)

	ШаблонОшибкиТовары = ПараметрыЗаполненияПФ.ШаблонОшибкиТовары;
	Макет = ПараметрыЗаполненияПФ.Макет;
	ИмяКолонкиКодов = ПараметрыЗаполненияПФ.ИмяКолонкиКодов;
	ВыводитьКоды = ПараметрыЗаполненияПФ.ВыводитьКоды;
	ДанныеПечати = ПараметрыЗаполненияПФ.ДанныеПечати;
	ЭтапыОплаты = ПараметрыЗаполненияПФ.ЭтапыОплаты;
	Товары = ПараметрыЗаполненияПФ.Товары;

	СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);

	ТаблицаТовары = Товары.НайтиСтроки(СтруктураПоиска);

	Если ТаблицаТовары.Количество() = 0 Тогда

		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонОшибкиТовары,
		ДанныеПечати.Ссылка,
		ДанныеПечати.ПредставлениеВОшибке);

		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДанныеПечати.Ссылка);
		Возврат;

	КонецЕсли;

	ТаблицаЭтапыОплаты = ЭтапыОплаты.НайтиСтроки(СтруктураПоиска);

	Если ПервыйДокумент Тогда
		ПервыйДокумент = Ложь;
	Иначе
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;

	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

	ЕстьНаценки = Ложь;
	ЕстьСкидки  = Ложь;

	Если ДанныеПечати.ИспользоватьАвтоСкидки Тогда

		Для Каждого СтрокаТоваров Из Товары Цикл
			Если СтрокаТоваров.СуммаСкидки>0 Тогда
				ЕстьСкидки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Для Каждого СтрокаТоваров Из Товары Цикл
			Если СтрокаТоваров.СуммаСкидки<0 Тогда
				ЕстьНаценки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	ВыводитьВидЦены = Ложь;
	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл

		Если ЗначениеЗаполнено(СтрокаТовары.ВидЦеныИсполнителя) Тогда
			ВыводитьВидЦены = Истина;
			Прервать;
		КонецЕсли;

	КонецЦикла;

	СкидкиНастройка = Новый Структура;
	СкидкиНастройка.Вставить("ЕстьСкидки", ЕстьНаценки ИЛИ ЕстьСкидки);
	СкидкиНастройка.Вставить("ЕстьСкидка", ЕстьСкидки);
	СкидкиНастройка.Вставить("ЕстьНаценка", ЕстьНаценки);
	ЕстьСкидки = ЕстьНаценки ИЛИ ЕстьСкидки;

	ПоказыватьНДС	= ДанныеПечати.ПоказыватьНДСВСтроках И ДанныеПечати.УчитыватьНДС;

	#Область ОпределениеИменЗаголовковОбластей

	ЕстьДопПараметр		= ЕстьСкидки Или ПоказыватьНДС;
	ДвойнойДопПараметр	= ЕстьСкидки И ПоказыватьНДС;

	ОбластиКолонок = НазванияОбластейКолонок(ДвойнойДопПараметр, ЕстьДопПараметр);

	ОбластьКолонкаТовар = Макет.Область(ОбластиКолонок.Товар);

	Если Не ВыводитьКоды Тогда

		Если ДвойнойДопПараметр Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.35;
		ИначеЕсли ЕстьДопПараметр Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
		Иначе
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.14;
		КонецЕсли;

	КонецЕсли;

	ОбластиСтрок = НазванияОбластейСтрок(СкидкиНастройка, ВыводитьВидЦены, ПоказыватьНДС);

	#КонецОбласти

	#Область ОбластиМакета

	// ОБЛАСТЕЙ ТАБЛИЦЫ "ТОВАРЫ"
	СтруктураОбластьКодовШапки = Новый Структура("Код, Артикул");

	ОбластьНомераШапки = Макет.ПолучитьОбласть(ОбластиСтрок.ШапкаТаблицы + "|НомерСтроки");
	СтруктураОбластьКодовШапки.Код = Макет.ПолучитьОбласть(ОбластиСтрок.ШапкаТаблицы + "|КолонкаКод");
	СтруктураОбластьКодовШапки.Артикул = Макет.ПолучитьОбласть(ОбластиСтрок.ШапкаТаблицы + "|КолонкаАртикул");
	ОбластьКодовШапки = ?(ВыводитьКоды, СтруктураОбластьКодовШапки[ИмяКолонкиКодов], Неопределено);

	ОбластьТоварШапки = Макет.ПолучитьОбласть(ОбластиСтрок.ШапкаТаблицы + "|" + ОбластиКолонок.Товар);
	ОбластьДанныхШапки = Макет.ПолучитьОбласть(ОбластиСтрок.ШапкаТаблицы + "|" + ОбластиКолонок.Данные);

	ОбластьНомераСтрокиСтандарт = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|НомерСтроки");
	ОбластьКодовСтрокиСтандарт  = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|КолонкаКод");
	ОбластьТоварСтрокиСтандарт  = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Товар);
	ОбластьДанныхСтрокиСтандарт = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Данные);

	ИспользоватьНаборы = Ложь;
	Если Товары.Колонки.Найти("ЭтоНабор") <> Неопределено Тогда
		ИспользоватьНаборы = Истина;
		ОбластьНомераСтрокиНабор         = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|НомерСтроки");
		ОбластьНомераСтрокиКомплектующие = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|НомерСтроки");
		ОбластьКодовСтрокиНабор          = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|КолонкаКод");
		ОбластьКодовСтрокиКомплектующие  = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|КолонкаКод");
		ОбластьТоварСтрокиНабор          = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Товар);
		ОбластьТоварСтрокиКомплектующие  = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Товар);
		ОбластьДанныхСтрокиНабор         = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Данные);
		ОбластьДанныхСтрокиКомплектующие = Макет.ПолучитьОбласть(ОбластиСтрок.СтрокаТаблицы + "|" + ОбластиКолонок.Данные);
	КонецЕсли;

	ОбластьНомераПодвала	= Макет.ПолучитьОбласть(ОбластиСтрок.ПодвалТаблицы + "|НомерСтроки");
	ОбластьКодовПодвала		= Макет.ПолучитьОбласть(ОбластиСтрок.ПодвалТаблицы + "|КолонкаКод");
	ОбластьТоварПодвала		= Макет.ПолучитьОбласть(ОбластиСтрок.ПодвалТаблицы + "|" + ОбластиКолонок.Товар);
	ОбластьДанныхПодвала	= Макет.ПолучитьОбласть(ОбластиСтрок.ПодвалТаблицы + "|" + ОбластиКолонок.Данные);

	Если НЕ ДанныеПечати.Тип = "ЗаказПереработчикуНаУслуги" Тогда

		ОбластьНомераНДС = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
		ОбластьКодовНДС = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаАртикул");

		ОбластьДанныеНДС = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|ДанныеНДС");
		ОбластьДанныеНДСИсчисляетсяНалоговымАгентом = Макет.ПолучитьОбласть("ПодвалТаблицыНДСИсчисляетсяНалоговымАгентом|ДанныеНДС");
		ОбластьДанныеБезНДС = Макет.ПолучитьОбласть("ПодвалТаблицыНДСБезНДС|ДанныеНДС");
		ОбластьДанныеВТЧНДС = Макет.ПолучитьОбласть("ПодвалТаблицыВТЧНДС|ДанныеНДС");

	КонецЕсли;

	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");

	#КонецОбласти

	#Область ВыводШапки

	// ШАПКА - ЗАГОЛОВОК
	Если ДанныеПечати.Тип = "ЗаказДавальцаНаУслуги" Тогда

		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЗаказДавальцаНаУслуги");

	ИначеЕсли  ДанныеПечати.Тип = "ЗаказДавальцуНаСырье" Тогда

		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЗаказДавальцуНаСырье");

	Иначе

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

	КонецЕсли;

	ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьМакета, "ЗаголовокЛоготип", ДанныеПечати.Организация);

	СтруктураДанныхШапки = Новый Структура;
	СтруктураДанныхШапки.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер));
	СтруктураДанныхШапки.Вставить("ДатаДокумента", Формат(ДанныеПечати.Дата, СтрШаблон("Л=%1;ДЛФ=DD", КодЯзыка)));

	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);

	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
	ТабличныйДокумент,
	Макет,
	ОбластьМакета,
	ДанныеПечати.Ссылка);

	ТабличныйДокумент.Вывести(ОбластьМакета);

	// ШАПКА - ИСПОЛНИТЕЛЬ

	ОбластьМакета = Макет.ПолучитьОбласть("Исполнитель");
	УстановитьПараметр(ОбластьМакета, "ПредставлениеИсполнителя", ОписаниеОрганизации(ДанныеПечати, "Исполнитель", КодЯзыка));
	ТабличныйДокумент.Вывести(ОбластьМакета);

	// ШАПКА - ЗАКАЗЧИК

	ОбластьМакета = Макет.ПолучитьОбласть("Заказчик");
	УстановитьПараметр(ОбластьМакета, "ПредставлениеЗаказчика", ОписаниеОрганизации(ДанныеПечати, "Заказчик", КодЯзыка));
	ТабличныйДокумент.Вывести(ОбластьМакета);

	// ШАПКА - ГРУЗООТПРАВИТЕЛЬ

	Если ЗначениеЗаполнено(ДанныеПечати.Грузоотправитель) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
		УстановитьПараметр(ОбластьМакета, "ПредставлениеГрузоотправителя", ОписаниеОрганизации(ДанныеПечати, "Грузоотправитель", КодЯзыка));
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	// ШАПКА - ГРУЗОПОЛУЧАТЕЛЬ

	Если ЗначениеЗаполнено(ДанныеПечати.Грузополучатель) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
		УстановитьПараметр(ОбластьМакета, "ПредставлениеГрузополучателя", ОписаниеОрганизации(ДанныеПечати, "Грузополучатель", КодЯзыка));
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	// ШАПКА - АДРЕС ДОСТАВКИ

	Если ЗначениеЗаполнено(ДанныеПечати.АдресДоставки) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("АдресДоставки");
		#Удаление
		УстановитьПараметр(ОбластьМакета, "АдресДоставки", ДанныеПечати.АдресДоставки);
		#КонецУдаления
		
		#Вставка
		ИмяНомер = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ИмяКлиента_876834a602e143b28fa4fcf8b2e57e3b");
		ИмяНомер = УправлениеСвойствами.ЗначениеСвойства(ДанныеПечати.Ссылка, ИмяНомер);
		
		ЧекНужен = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "НуженЧек_cff4ed28267c496fabc5d65ff7bfb6e8");
		ЧекНужен = УправлениеСвойствами.ЗначениеСвойства(ДанныеПечати.Ссылка, ЧекНужен);
		
		Разгрузка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "Разгрузка_3806a89b316545f4b98b606499fd9a74");
		Разгрузка = УправлениеСвойствами.ЗначениеСвойства(ДанныеПечати.Ссылка, Разгрузка);
		
		Доставка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПечати.Ссылка, "СпособДоставки");
		
		АдресДоставки = Новый Массив;
		Если Доставка = Перечисления.СпособыДоставки.ДоКлиента Тогда
			АдресДоставки.Добавить("Доставка: " + ДанныеПечати.АдресДоставки);
			АдресДоставки.Добавить("Разгрузка: " + Формат(Разгрузка,"БЛ=Нет; БИ=Да"));
		ИначеЕсли Доставка = Перечисления.СпособыДоставки.Самовывоз Тогда
			АдресДоставки.Добавить("Самовывоз: " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПечати.Ссылка, "Склад.Наименование"));
		Иначе	
			АдресДоставки.Добавить("Другой вариант доставки");
		КонецЕсли;
		АдресДоставки.Добавить("Чек: " + Формат(ЧекНужен,"БЛ=Нет; БИ=Да"));
		АдресДоставки.Добавить("Имя и номер: " + ИмяНомер);
		
		УстановитьПараметр(ОбластьМакета, "АдресДоставки", СтрСоединить(АдресДоставки, Символы.ПС));
		#КонецВставки
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	#КонецОбласти

	#Область ВыводТаблицыТовары

	// ТАБЛИЦА ТОВАРЫ - СТРОКИ

	МассивПроверкиВывода = Новый Массив;
	МассивПроверкиВывода.Добавить(ОбластьНомераШапки);
	МассивПроверкиВывода.Добавить(ОбластьНомераПодвала);
	Если ПоказыватьНДС Тогда
		МассивПроверкиВывода.Добавить(ОбластьНомераНДС);
	КонецЕсли;
	МассивПроверкиВывода.Добавить(ОбластьСуммаПрописью);

	Сумма			= 0;
	СуммаНДС		= 0;
	ВсегоСкидок		= 0;
	ВсегоБезСкидок	= 0;

	НомерСтроки = 0;

	ПустыеДанные = НаборыСервер.ПустыеДанные();
	ВыводШапки = 0;

	СоответствиеСтавокНДС = Новый Соответствие;

	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл

		Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, ИспользоватьНаборы) Тогда
			ОбластьКодовСтроки   = ОбластьКодовСтрокиНабор;
			ОбластьНомераСтроки  = ОбластьНомераСтрокиНабор;
			ОбластьДанныхСтроки  = ОбластьДанныхСтрокиНабор;
			ОбластьТоварСтроки   = ОбластьТоварСтрокиНабор;
		ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
			ОбластьКодовСтроки   = ОбластьКодовСтрокиКомплектующие;
			ОбластьНомераСтроки  = ОбластьНомераСтрокиКомплектующие;
			ОбластьДанныхСтроки  = ОбластьДанныхСтрокиКомплектующие;
			ОбластьТоварСтроки   = ОбластьТоварСтрокиКомплектующие;
		Иначе
			ОбластьКодовСтроки   = ОбластьКодовСтрокиСтандарт;
			ОбластьНомераСтроки  = ОбластьНомераСтрокиСтандарт;
			ОбластьДанныхСтроки  = ОбластьДанныхСтрокиСтандарт;
			ОбластьТоварСтроки   = ОбластьТоварСтрокиСтандарт;
		КонецЕсли;

		Если НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
			УстановитьПараметр(ОбластьНомераСтроки, "НомерСтроки", Неопределено);
		Иначе
			НомерСтроки = НомерСтроки + 1;
			УстановитьПараметр(ОбластьНомераСтроки, "НомерСтроки", НомерСтроки);
		КонецЕсли;

		Если НомерСтроки = 0 И ВыводШапки <> 2 Тогда
			ВыводШапки = 1;
		КонецЕсли;

		МассивПроверкиВывода.Добавить(ОбластьНомераСтроки);

		Если ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда

			Если (НомерСтроки = 1 И ВыводШапки = 0) ИЛИ (НомерСтроки = 0 И ВыводШапки = 1) Тогда

				ВыводШапки = 2;

				ВывестиШапку(ТабличныйДокумент, ОбластьНомераШапки, ОбластьКодовШапки, ОбластьТоварШапки, ОбластьДанныхШапки, ВыводитьКоды);
				МассивПроверкиВывода.Удалить(0);

			КонецЕсли;

		Иначе

			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВывестиШапку(ТабличныйДокумент, ОбластьНомераШапки, ОбластьКодовШапки, ОбластьТоварШапки, ОбластьДанныхШапки, ВыводитьКоды);

		КонецЕсли;

		МассивПроверкиВывода.Удалить(МассивПроверкиВывода.ВГраница());

		УстановитьПараметр(ОбластьНомераСтроки, "НомерСтроки", НомерСтроки);
		ТабличныйДокумент.Вывести(ОбластьНомераСтроки);

		Если ВыводитьКоды Тогда

			ИмяКолонки = ИмяКолонкиКодов;
			Если ДанныеПечати.Тип = "ЗаказПоставщикуПоДаннымПоставщика" Тогда
				Если ИмяКолонки = "Код" Тогда
					ИмяКолонки = "КодИсполнителя";
				ИначеЕсли ИмяКолонки = "Артикул" Тогда
					ИмяКолонки = "АртикулИсполнителя";
				Иначе
					ИмяКолонки = "Исполнителя"
				КонецЕсли;
			КонецЕсли;

			УстановитьПараметр(ОбластьКодовСтроки, "Артикул", СтрокаТовары[ИмяКолонки]);
			ТабличныйДокумент.Присоединить(ОбластьКодовСтроки);

		КонецЕсли;

		Если ДанныеПечати.Тип = "ЗаказПоставщикуПоДаннымПоставщика" Тогда

			ПредставлениеНоменклатурыДляПечати = СтрокаТовары.НаименованиеНоменклатурыИсполнителя;

		Иначе
			ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
			ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = СтрокаТовары.ЭтоВозвратнаяТара;				
			ДополнительныеПараметрыПолученияНаименованияДляПечати.Содержание = СтрокаТовары.Содержание;				
			ДополнительныеПараметрыПолученияНаименованияДляПечати.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

			ПредставлениеНоменклатурыДляПечати = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			СтрокаТовары.НаименованиеПолное,
			СтрокаТовары.Характеристика,
			,
			,
			ДополнительныеПараметрыПолученияНаименованияДляПечати);

		КонецЕсли;

		ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(СтрокаТовары, ИспользоватьНаборы);
		УстановитьПараметр(ОбластьТоварСтроки, "Товар", ПрефиксИПостфикс.Префикс + ПредставлениеНоменклатурыДляПечати + ПрефиксИПостфикс.Постфикс);

		ТабличныйДокумент.Присоединить(ОбластьТоварСтроки);
		ОбластьДанныхСтроки.Параметры.Заполнить(СтрокаТовары);

		Если ЕстьСкидки Тогда
			УстановитьПараметр(ОбластьДанныхСтроки, "СуммаБезСкидки", СтрокаТовары.СуммаБезСкидки);
			УстановитьПараметр(ОбластьДанныхСтроки, "СуммаСкидки", ?(СкидкиНастройка.ЕстьНаценка И НЕ СкидкиНастройка.ЕстьСкидка, - СтрокаТовары.СуммаСкидки, СтрокаТовары.СуммаСкидки));
		КонецЕсли;

		Если НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
			ОбластьДанныхСтроки.Параметры.Заполнить(ПустыеДанные);
		Иначе
			ОбластьДанныхСтроки.Параметры.Заполнить(СтрокаТовары);
		КонецЕсли;

		Если ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда
			УстановитьПараметр(ОбластьДанныхСтроки, "СтавкаНДС", Макет.Области.ТекстНДСИсчисляетсяНалоговымШаблон.Текст);
		КонецЕсли;

		ТабличныйДокумент.Присоединить(ОбластьДанныхСтроки);

		Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
			Сумма    = Сумма    + СтрокаТовары.Сумма;
			СуммаНДС = СуммаНДС + СтрокаТовары.СуммаНДС;

			Если ЕстьСкидки Тогда
				ВсегоСкидок    = ВсегоСкидок    + СтрокаТовары.СуммаСкидки;
				ВсегоБезСкидок = ВсегоБезСкидок + СтрокаТовары.СуммаБезСкидки;
			КонецЕсли;

			Если ДанныеПечати.УчитыватьНДС Тогда

				СуммаНДСПоСтавке = СоответствиеСтавокНДС[СтрокаТовары.СтавкаНДС];

				Если СуммаНДСПоСтавке = Неопределено Тогда
					СуммаНДСПоСтавке = 0;
				КонецЕсли;

				Если ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда
					СоответствиеСтавокНДС.Вставить(ПредопределенноеЗначение("Справочник.СтавкиНДС.БезНДС"), СуммаНДСПоСтавке + СтрокаТовары.СуммаНДС);
				Иначе
					СоответствиеСтавокНДС.Вставить(СтрокаТовары.СтавкаНДС, СуммаНДСПоСтавке + СтрокаТовары.СуммаНДС);
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	// ТАБЛИЦА ТОВАРЫ - ПОДВАЛ

	ТабличныйДокумент.Вывести(ОбластьНомераПодвала);

	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьКодовПодвала);
	КонецЕсли;

	ТабличныйДокумент.Присоединить(ОбластьТоварПодвала);

	Если ЕстьСкидки Тогда
		УстановитьПараметр(ОбластьДанныхПодвала, "ВсегоСкидок", ?(СкидкиНастройка.ЕстьНаценка И НЕ СкидкиНастройка.ЕстьСкидка, -ВсегоСкидок, ВсегоСкидок));
		УстановитьПараметр(ОбластьДанныхПодвала, "ВсегоБезСкидок", ВсегоБезСкидок);
	КонецЕсли;

	УстановитьПараметр(ОбластьДанныхПодвала, "Всего", ФормированиеПечатныхФорм.ФорматСумм(Сумма,,,,КодЯзыка));
	ТабличныйДокумент.Присоединить(ОбластьДанныхПодвала);

	// ТАБЛИЦА ТОВАРЫ - ИТОГО НДС
	Если НЕ ДанныеПечати.Тип = "ЗаказПереработчикуНаУслуги" Тогда

		Если Не ДанныеПечати.УчитыватьНДС Или ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда

			ТабличныйДокумент.Вывести(ОбластьНомераНДС);

			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодовНДС);
			КонецЕсли;

			Если ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда

				ОбластьДанныхНДС = ОбластьДанныеНДСИсчисляетсяНалоговымАгентом;

			Иначе

				ОбластьДанныхНДС = ОбластьДанныеБезНДС;

			КонецЕсли;
			УстановитьПараметр(ОбластьДанныхНДС, "ВсегоНДС", "-");

			ТабличныйДокумент.Присоединить(ОбластьДанныхНДС);

		Иначе

			Для Каждого ТекСтавкаНДС Из СоответствиеСтавокНДС Цикл

				ТабличныйДокумент.Вывести(ОбластьНомераНДС);

				Если ВыводитьКоды Тогда

					ТабличныйДокумент.Присоединить(ОбластьКодовНДС);

				КонецЕсли;

				ОбластьДанныхНДС = ?(ДанныеПечати.ЦенаВключаетНДС, ОбластьДанныеВТЧНДС, ОбластьДанныеНДС);

				УстановитьПараметр(ОбластьДанныхНДС, "ИмяСтавкиНДС", ТекСтавкаНДС.Ключ);
				УстановитьПараметр(ОбластьДанныхНДС, "ВсегоНДС", ФормированиеПечатныхФорм.ФорматСумм(ТекСтавкаНДС.Значение, , "-",,КодЯзыка));
				ТабличныйДокумент.Присоединить(ОбластьДанныхНДС);

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

	#КонецОбласти

	#Область ВыводПодвала

	// ПОДВАЛ - СУММА ПРОПИСЬЮ

	СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);

	УстановитьПараметр(ОбластьСуммаПрописью, "КоличествоСтрок", НомерСтроки);
	УстановитьПараметр(ОбластьСуммаПрописью, "СуммаИтого", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта, КодЯзыка));
	УстановитьПараметр(ОбластьСуммаПрописью, "СуммаПрописью", РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
	СуммаКПрописи, ДанныеПечати.Валюта,, КодЯзыка));

	ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);

	// ПОДВАЛ - ЭТАПЫ ГРАФИКА ОПЛАТЫ

	Если ТаблицаЭтапыОплаты.Количество() > 1 Тогда

		ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты");
		ОбластьПодвалаТаблицы = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты");

		МассивПроверкиВывода.Очистить();
		МассивПроверкиВывода.Добавить(ОбластьШапкиТаблицы);
		МассивПроверкиВывода.Добавить(ОбластьПодвалаТаблицы);

		ОбластьСтрокиТаблицыАвансДоОбеспечения = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыАвансДоОбеспечения");
		ОбластьСтрокиТаблицыПредоплатаДоОтгрузки = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыПредоплатаДоОтгрузки");
		ОбластьСтрокиТаблицыКредитПослеОтгрузки = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыКредитПослеОтгрузки");
		ОбластьСтрокиТаблицыКредитСдвиг = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыКредитСдвиг");
		ОбластьСтрокиТаблицыНеНайденВариант = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыНеНайденВариант");

		ОбластьСтрокиТаблицыАвансДоОбеспеченияТара = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыАвансДоОбеспеченияТара");
		ОбластьСтрокиТаблицыПредоплатаДоОтгрузкиТара = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыПредоплатаДоОтгрузкиТара");
		ОбластьСтрокиТаблицыКредитПослеОтгрузкиТара = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыКредитПослеОтгрузкиТара");
		ОбластьСтрокиТаблицыКредитСдвигТара = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыКредитСдвигТара");
		ОбластьСтрокиТаблицыНеНайденВариантТара = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплатыНеНайденВариантТара");

		НомерЭтапа = 1;
		ТекстНДСШаблон = Макет.Области.ТекстНДСШаблон.Текст;
		ТекстНДСВТЧШаблон = Макет.Области.ТекстНДСВТЧШаблон.Текст;
		ТекстНДСБезНалогаШаблон = Макет.Области.ТекстНДСБезНалогаШаблон.Текст;
		Для Каждого ТекЭтап Из ТаблицаЭтапыОплаты Цикл

			ПараметрыСтроки = НовыеПараметрыСтрокиЭтапа();
			ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ТекЭтап);
			ПараметрыСтроки.НомерСтроки = НомерЭтапа;

			Если Не ПараметрыСтроки.ЭтоЗалогЗаТару Тогда

				ТекстНДС = "";

				Если СоответствиеСтавокНДС.Количество() > 0 Тогда

					Для Каждого ТекСтавкаНДС Из СоответствиеСтавокНДС Цикл

						Если ТекСтавкаНДС.Значение <> 0 Тогда

							ТекстНДС = ТекстНДС + ?(ПустаяСтрока(ТекстНДС), ТекстНДСВТЧШаблон, ", " + ТекстНДСШаблон);
							ТекстНДС = СтрЗаменить(ТекстНДС, "[ИмяСтавкиНДС]", ТекСтавкаНДС.Ключ);
							ТекстНДС = СтрЗаменить(ТекстНДС, "[СуммаНДС]",  Формат(ТекСтавкаНДС.Значение / 100 * ТекЭтап.ПроцентПлатежа, "ЧДЦ=2"));

						КонецЕсли;

					КонецЦикла;

				КонецЕсли;

				Если ЗначениеЗаполнено(ТекстНДС) Тогда
					ПараметрыСтроки.ТекстНДС = ТекстНДС;
				Иначе
					ПараметрыСтроки.ТекстНДС = ТекстНДСБезНалогаШаблон;
				КонецЕсли;

				Если ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.АвансДоОбеспечения") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыАвансДоОбеспечения;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыПредоплатаДоОтгрузки;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитПослеОтгрузки") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыКредитПослеОтгрузки;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитСдвиг") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыКредитСдвиг;

				Иначе

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыНеНайденВариант;

				КонецЕсли;

			Иначе

				Если ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.АвансДоОбеспечения") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыАвансДоОбеспеченияТара;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыПредоплатаДоОтгрузкиТара;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитПослеОтгрузки") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыКредитПослеОтгрузкиТара;

				ИначеЕсли ПараметрыСтроки.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитСдвиг") Тогда

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыКредитСдвигТара;

				Иначе

					ОбластьСтрокиТаблицы = ОбластьСтрокиТаблицыНеНайденВариантТара;

				КонецЕсли;

				ПараметрыСтроки.ПроцентПлатежа = "-";
				ПараметрыСтроки.ТекстНДС = ТекстНДСБезНалогаШаблон;

			КонецЕсли;

			ОбластьСтрокиТаблицы.Параметры.Заполнить(ПараметрыСтроки);

			МассивПроверкиВывода.Добавить(ОбластьСтрокиТаблицы);

			Если ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда

				Если НомерЭтапа=1 Тогда
					ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
					МассивПроверкиВывода.Удалить(0);
				КонецЕсли;

			Иначе

				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);

			КонецЕсли;

			МассивПроверкиВывода.Удалить(МассивПроверкиВывода.ВГраница());

			ТабличныйДокумент.Вывести(ОбластьСтрокиТаблицы);

			НомерЭтапа = НомерЭтапа + 1;

		КонецЦикла;

		ТабличныйДокумент.Вывести(ОбластьПодвалаТаблицы);

	КонецЕсли;

	// ПОДВАЛ - ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ

	Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформация) Тогда

		ОбластьМакета = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
		УстановитьПараметр(ОбластьМакета, "ДополнительнаяИнформация", ДанныеПечати.ДополнительнаяИнформация);
		ТабличныйДокумент.Вывести(ОбластьМакета);

	КонецЕсли;

	// ПОДВАЛ - ПОДПИСИ

	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	УстановитьПараметр(ОбластьМакета, "ФИОМенеджер", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер, ДанныеПечати.Дата));
	ТабличныйДокумент.Вывести(ОбластьМакета);

	#КонецОбласти

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
	ТабличныйДокумент,
	НомерСтрокиНачало,
	ОбъектыПечати,
	ДанныеПечати.Ссылка);

КонецПроцедуры
