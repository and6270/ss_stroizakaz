
&НаСервере
Процедура ЗаполнитьНоменклатуруПоставщика();
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	НоменклатураКонтрагентов.НаименованиеНоменклатуры КАК НоменклатураПоставщика,
	//	|	НоменклатураКонтрагентов.КодНоменклатуры КАК КодПоставщика,
	//	|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
	//	|	НоменклатураКонтрагентов.Упаковка КАК ЕдиницаИзмерения
	//	|ИЗ
	//	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	//	|ГДЕ
	//	|	НЕ НоменклатураКонтрагентов.Недействителен
	//	|	И НоменклатураКонтрагентов.Владелец = &Владелец";
	//
	//Запрос.УстановитьПараметр("Владелец", Поставщик);
	//НоменклатураПоставщика.Загрузить(запрос.Выполнить().Выгрузить());
	КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	ЗаполнитьНоменклатуруПоставщика();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьТабДок(Команда)
	ЗаполнитьЗаданияНаЗагрузку();
	Элементы.СписокЗаданияНаЗагрузку.Обновить();
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьЗаданияНаЗагрузку()
	 Обработки.Расш6270_УстановкаЦенНоменклатурыИзТабДок.ЗаполнитьЗаданияНаЗагрузку();
КонецПроцедуры


&НаСервере
Процедура НачатьСопоставлениеСервере(АдресФайла, Партнер)
	// Получить данные сервера для партнера
	Выборка = РегистрыСведений.Расш6270_НастройкиПартнеров.Получить(Новый Структура ("Партнер", Партнер));
	
	FTPСервер = Новый FTPСоединение(Выборка.АдресСервераFTP, , Выборка.Логин, Выборка.Пароль);
	ПотокФайл = Новый ПотокВПамяти();
	FTPСервер.Получить(АдресФайла, ПотокФайл);
	
	ТабДок = Новый ТабличныйДокумент;
	ПотокФайл.Перейти(0, ПозицияВПотоке.Начало);
	ТабДок.Прочитать(ПотокФайл, 
					СпособЧтенияЗначенийТабличногоДокумента.Текст, 
					ТипФайлаТабличногоДокумента.MXL);
	ПотокФайл.Закрыть();
	// Пробежимся по таблице и заполним таблицу
	КолонкаКод = Выборка.КолонкаКод;
	КолонкаНаименование = Выборка.КолонкаНаименование;
	КолонкаЦена = Выборка.КолонкаЦена;
	Строка = Выборка.ПерваяСтрока;
	Артикул = Выборка.КолонкаАртикул;
	КоличествоСтрокВФайле = ТабДок.ВысотаТаблицы - Выборка.ПерваяСтрока +1; 
	// создам таблицу значений и заполню ее из файла для передачи в запрос
	ТЗ = Новый ТаблицаЗначений;
	КвалификаторыСтроки = Новый КвалификаторыСтроки(200);
    ОписаниеСтроки = Новый ОписаниеТипов("Строка", ,КвалификаторыСтроки);
	
    тз.Колонки.Добавить("КодПоставщика", ОписаниеСтроки);
	тз.Колонки.Добавить("НоменклатураПоставщика", ОписаниеСтроки);
	тз.Колонки.Добавить("АртикулПоставщика", ОписаниеСтроки);
	тз.Колонки.Добавить("Цена", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());

	Пока Строка <= ТабДок.ВысотаТаблицы Цикл
		Если КолонкаКод Тогда
			ТекКодПоставщика = ТабДок.Область("R" + Формат(Строка, "ЧГ=0") + "C" + КолонкаКод).Текст;
		КонецЕсли;
		Если КолонкаНаименование Тогда
			ТекНоменклатураПоставщика = ТабДок.Область("R" + Формат(Строка, "ЧГ=0") + "C" + КолонкаНаименование).Текст;
		КонецЕсли;
		Если Артикул Тогда
			ТекАртикул = ТабДок.Область("R" + Формат(Строка, "ЧГ=0")+ "C" + Артикул).Текст;
		КонецЕсли;
	    ТекЦенаПоставщика = ТабДок.Область("R" + Формат(Строка, "ЧГ=0") + "C" + КолонкаЦена).Текст;
		
		Если ЯвляетсяЧислом(ТекЦенаПоставщика) Тогда
			новСтрока = ТЗ.Добавить();
			новСтрока.КодПоставщика = ТекКодПоставщика;
			новСтрока.НоменклатураПоставщика = ТекНоменклатураПоставщика;
			новСтрока.Цена = Число(ТекЦенаПоставщика);
			новСтрока.АртикулПоставщика = ТекАртикул;
		// Подбор номенклатуры из таблица НоменклатураПоставщика
		КонецЕсли;
		Строка = Строка + 1;
					
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.КодПоставщика КАК КодПоставщика,
		|	ТЗ.НоменклатураПоставщика КАК НоменклатураПоставщика, 
		|	ТЗ.АртикулПоставщика КАК АртикулПоставщика,
		|	ТЗ.Цена КАК Цена
		|ПОМЕСТИТЬ ВремТЗ
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураКонтрагентов.Ссылка КАК НоменклатураПоставщикаСсылка,
		|	НоменклатураКонтрагентов.КодНоменклатуры КАК КодНоменклатуры,
		|	НоменклатураКонтрагентов.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
		|	ВЫРАЗИТЬ(НоменклатураКонтрагентов.Номенклатура КАК Справочник.Номенклатура).Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ ВТНоменклатураКонтрагента
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.Владелец = &Владелец
		|	И НЕ НоменклатураКонтрагентов.Недействителен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТНоменклатураКонтрагента.НоменклатураПоставщикаСсылка КАК НоменклатураПоставщикаСсылка,
		|	ВТНоменклатураКонтрагента.КодНоменклатуры КАК КодНоменклатуры,
		|	ВТНоменклатураКонтрагента.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
		|	ВТНоменклатураКонтрагента.Номенклатура КАК Номенклатура,
		|	ВремТЗ.Цена КАК Цена
		|ПОМЕСТИТЬ ВТСопоставленные
		|ИЗ
		|	ВремТЗ КАК ВремТЗ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНоменклатураКонтрагента КАК ВТНоменклатураКонтрагента
		|		ПО ВремТЗ.КодПоставщика = ВТНоменклатураКонтрагента.КодНоменклатуры
		|ГДЕ
		|	ВремТЗ.КодПоставщика <> """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТНоменклатураКонтрагента.НоменклатураПоставщикаСсылка,
		|	ВТНоменклатураКонтрагента.Номенклатура,
		|	ВТНоменклатураКонтрагента.КодНоменклатуры,
		|	ВТНоменклатураКонтрагента.НаименованиеНоменклатуры,
		|	ВремТЗ.Цена
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТНоменклатураКонтрагента.НоменклатураПоставщикаСсылка КАК НоменклатураПоставщикаСсылка,
		|	ВТНоменклатураКонтрагента.КодНоменклатуры,
		|	ВТНоменклатураКонтрагента.НаименованиеНоменклатуры,
		|	ВТНоменклатураКонтрагента.Номенклатура,
		|	ВремТЗ.Цена
		|ИЗ
		|	ВремТЗ КАК ВремТЗ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНоменклатураКонтрагента КАК ВТНоменклатураКонтрагента
		|		ПО ВремТЗ.НоменклатураПоставщика = ВТНоменклатураКонтрагента.НаименованиеНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТСопоставленные.НоменклатураПоставщикаСсылка КАК НоменклатураПоставщикаСсылка,
		|	ВТСопоставленные.КодНоменклатуры КАК КодНоменклатуры,
		|	ВТСопоставленные.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
		|	ВЫРАЗИТЬ(ВТСопоставленные.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВТСопоставленные.Цена КАК Цена
		|ПОМЕСТИТЬ ВТСопоставленоРазличных
		|ИЗ
		|	ВТСопоставленные КАК ВТСопоставленные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТЗ.КодПоставщика КАК КодПоставщика,
		|	ВремТЗ.НоменклатураПоставщика КАК НоменклатураПоставщика,    
		|	ВремТЗ.АртикулПоставщика КАК АртикулПоставщика,
		|	ВремТЗ.Цена КАК Цена,
		|	ВТСопоставленоРазличных.Номенклатура КАК Номенклатура,
		|	ВТСопоставленоРазличных.НоменклатураПоставщикаСсылка КАК НоменклатураПоставщикаСсылка
		|ИЗ
		|	ВремТЗ КАК ВремТЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСопоставленоРазличных КАК ВТСопоставленоРазличных
		|		ПО ВремТЗ.КодПоставщика = ВТСопоставленоРазличных.КодНоменклатуры
		|			И ВремТЗ.НоменклатураПоставщика = ВТСопоставленоРазличных.НаименованиеНоменклатуры";
	
	Запрос.УстановитьПараметр("Владелец", Партнер); 
	Запрос.УстановитьПараметр("ЗакупочнаяЦена", ПолучитьЗакупочнуюЦенуНаСервере());
	Запрос.УстановитьПараметр("ТЗ", тз);
	Результат = Запрос.Выполнить();
	ПодборТоваров.Загрузить(Результат.Выгрузить());	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ЯвляетсяЧислом(СтрокаЧисло)
	Возврат  Обработки.Расш6270_УстановкаЦенНоменклатурыИзТабДок.ЯвляетсяЧислом(СтрокаЧисло); 
КонецФункции

&НаКлиенте
Процедура УстановитьЦены(Команда)
		//ТУДУ дописать создание номенклатуры поставщика из сопоставленных строк
	СоздатьНоменклатуруПартнера();
	
	ПараметрыФормы = Новый Структура("Основание", "");
	ДокУстановкиЦен = ОткрытьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаДокумента", ПараметрыФормы);
	СкопироватьТаблицуВБуферОбмена();
	ВидЦены = ПолучитьЗакупочнуюЦенуНаСервере();
	ДокУстановкиЦен.ЗаполнитьСтрокиНаСервере(ВидЦены);
КонецПроцедуры   

&НаСервере
Процедура СоздатьНоменклатуруПартнера()
	Отказ = Ложь;
	Для Каждого ТекСтрока Из ПодборТоваров Цикл
		
		Если (ТекСтрока.СопоставленВручную) И ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
		
			НоменклатураКонтрагента = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента();
			
			Если ЗначениеЗаполнено(ТекСтрока.НоменклатураПоставщикаСсылка) Тогда
				СопоставлениеНоменклатурыКонтрагентов.ЗаполнитьДанныеНоменклатурыКонтрагентаПоСсылке(
					ТекСтрока.НоменклатураПоставщикаСсылка, НоменклатураКонтрагента);
			КонецЕсли;
			
			НоменклатураКонтрагента.Владелец         = ВыбраныйПартнер;
			Если ЗначениеЗаполнено(ТекСтрока.НоменклатураПоставщика) Тогда
				НоменклатураКонтрагента.Наименование = ТекСтрока.НоменклатураПоставщика;
			КонецЕсли;
			Если ЗначениеЗаполнено(ТекСтрока.АртикулПоставщика) Тогда
				НоменклатураКонтрагента.Артикул      = ТекСтрока.АртикулПоставщика;
			КонецЕсли;
			НоменклатураКонтрагента.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения; // Базовая единица хранения номенклатуры.
			Если ЗначениеЗаполнено(ТекСтрока.ЕдиницаИзмерения) Тогда
				НоменклатураКонтрагента.ЕдиницаИзмеренияКод = ТекСтрока.ЕдиницаИзмерения.Код;
			КонецЕсли; 
			Если ЗначениеЗаполнено(ТекСтрока.КодПоставщика) Тогда
				НоменклатураКонтрагента.КодНоменклатуры = ТекСтрока.КодПоставщика;
			КонецЕсли;
			
			НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы(
				ТекСтрока.Номенклатура, ТекСтрока.Характеристика, ТекСтрока.Упаковка);
				
			ДополнительныеПараметры = СопоставлениеНоменклатурыКонтрагентов.НовыеДополнительныеПараметрыПриЗаписиНоменклатурыКонтрагентов();
			ДополнительныеПараметры.ТребуетсяПоискСсылки = Ложь;
			ДополнительныеПараметры.ТребуетсяПоискЕдиницыИзмеренияПоОКЕИ = Ложь;
			
			ТекстОшибки = "";
			СопоставлениеНоменклатурыКонтрагентов.СоздатьОбновитьНоменклатуруКонтрагента(
				НоменклатураКонтрагента, НоменклатураИБ, Отказ, ТекстОшибки, ДополнительныеПараметры);
				
			//ТекСтрока.НоменклатураПартнера = НоменклатураКонтрагента.НоменклатураКонтрагента;
			
			//Если Не Отказ Тогда
			//	ТекСтрока.НоменклатураСопоставленаАвтоматически = Истина;
			//	Если Не ЗначениеЗаполнено(ТекСтрока.НоменклатураПартнера) Тогда
			//		ТекСтрока.НоменклатураПартнера = НоменклатураКонтрагента.НоменклатураКонтрагента;
			//	КонецЕсли;
			//Иначе
			//	ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
			//КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	// Конец ЭлектронноеВзаимодействие.СопоставлениеНоменклатурыКонтрагентов	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗакупочнуюЦенуНаСервере()
	Возврат  Обработки.Расш6270_УстановкаЦенНоменклатурыИзТабДок.ПолучитьЗакупочнуюЦену(); 
КонецФункции

&НаСервере
Процедура СкопироватьТаблицуВБуферОбмена()
	ОписаниеТиповДенежногоПоля = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	
	КопируемыеТовары = Новый ТаблицаЗначений;
	КопируемыеТовары.Колонки.Добавить("Номенклатура",           Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	КопируемыеТовары.Колонки.Добавить("Характеристика",          Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	КопируемыеТовары.Колонки.Добавить("Цена",                    ОписаниеТиповДенежногоПоля);
	КопируемыеТовары.Колонки.Добавить("Упаковка",                Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	Для Каждого ТекСтрока Из ПодборТоваров Цикл
		
		Если ТекСтрока.Номенклатура.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		НовСтрока = КопируемыеТовары.Добавить();
		НовСтрока.Номенклатура = ТекСтрока.Номенклатура;
		НовСтрока.Цена = ТекСтрока.Цена;
		
	КонецЦикла;
	
	РаботаСТабличнымиЧастями.ПоместитьТаблицуЗначенийВБуферОбмена(КопируемыеТовары);
КонецПроцедуры


&НаКлиенте
Процедура НачатьСопоставление(Команда)
	ПодборТоваров.Очистить();
	НачатьСопоставлениеСервере(Команда.ИспользуемаяТаблица.ТекущиеДанные.ИмяФайлаНаСервереФТП, 
						Команда.ИспользуемаяТаблица.ТекущиеДанные.Партнер);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаТекущаяЗагрузка;
	Элементы.ДекорацияПартнерДатаФайл.Заголовок = 
						"Файл: " +
						Команда.ИспользуемаяТаблица.ТекущиеДанные.ИмяФайлаНаСервереФТП; 
	ВыбраныйПартнер = Команда.ИспользуемаяТаблица.ТекущиеДанные.Партнер;
КонецПроцедуры

&НаКлиенте
Процедура ПодборТоваровНоменклатураПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ПодборТоваров.ТекущиеДанные;
	ТекущаяСтрока.СопоставленВручную = Истина; 
КонецПроцедуры

&НаКлиенте
Процедура ПоискВНоменклатуре(Команда)
	Для Каждого Стр из ПодборТоваров Цикл
		Если Стр.Номенклатура.Пустая() Тогда
			МасРезультат = ПодобратьНоменклатуруНаСервере(Стр.НоменклатураПоставщика, Стр.АртикулПоставщика);
			Если МасРезультат.Количество() = 1 Тогда  //если единственный вариант
				Стр.Номенклатура = МасРезультат[0]; 
				Стр.СопоставленВручную = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПодобратьНоменклатуруНаСервере(НаименованиеПоставщика, Артикул = "")
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.Наименование = &НаименованиеПоставщика
		|	И НЕ СпрНоменклатура.ПометкаУдаления
		|	И НЕ СпрНоменклатура.ЭтоГруппа
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.НаименованиеПолное = &НаименованиеПоставщика
		|	И НЕ СпрНоменклатура.ПометкаУдаления
		|	И НЕ СпрНоменклатура.ЭтоГруппа";
	Если Артикул <> "" Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.Артикул = &Артикул
		|	И НЕ СпрНоменклатура.ПометкаУдаления
		|	И НЕ СпрНоменклатура.ЭтоГруппа";
		
		Запрос.УстановитьПараметр("Артикул", Артикул);  
	КонецЕсли;
	Запрос.УстановитьПараметр("НаименованиеПоставщика", НаименованиеПоставщика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивРезультат = Новый Массив();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивРезультат.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат МассивРезультат;
КонецФункции


// Не актуально, когда нибудь допишу
&НаКлиенте
Процедура ПодборТоваровНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ФормированиеСпискаВыбора (Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПодборТоваровНоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ФормированиеСпискаВыбора (Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеСпискаВыбора (Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элементы.ПодборТоваров.ТекущиеДанные.НоменклатураПоставщикаСсылка.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПодобратьНоменклатуруНаСервере(элементы.ПодборТоваров.ТекущиеДанные.НоменклатураПоставщика, элементы.ПодборТоваров.ТекущиеДанные.АртикулПоставщика);
	КонецЕсли;
КонецПроцедуры


