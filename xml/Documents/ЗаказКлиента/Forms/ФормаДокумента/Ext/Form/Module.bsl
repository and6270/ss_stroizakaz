
&НаСервере
Процедура Расш6270_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//Создаем Команду
	НоваяКоманда = ЭтаФорма.Команды.Добавить("Расш6270_СоздатьСделкуВБитрикс");
	НоваяКоманда.Действие = "Расш6270_СоздатьСделкуВБитрикс";
	Если ПолучитьНомерСделки(Объект.Ссылка) = Неопределено Тогда
		НоваяКоманда.Заголовок = "Отправить в Битрикс";
	Иначе
		НоваяКоманда.Заголовок = "Открыть в Битрикс";
	КонецЕсли;
	
	НоваяКнопка = ЭтаФорма.Элементы.Добавить("Расш6270_СоздатьСделкуВБитрикс", Тип("КнопкаФормы"), ЭтаФорма.Элементы.ГруппаСтатусПриоритет);
	НоваяКнопка.ИмяКоманды = "Расш6270_СоздатьСделкуВБитрикс";
	НоваяКнопка.Картинка = БиблиотекаКартинок.ОтправитьСообщение;
	НоваяКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
КонецПроцедуры

&НаКлиенте
Процедура Расш6270_СоздатьСделкуВБитрикс(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НомерСделки = ПолучитьНомерСделки(Объект.Ссылка);
		Если НомерСделки = Неопределено Тогда
			Расш6270_Битрикс24.СоздатьСделку(Объект.Ссылка);
			ЭтаФорма.Элементы.Расш6270_СоздатьСделкуВБитрикс.Заголовок = "Открыть в Битрикс";
			
		Иначе
			ПерейтиПоНавигационнойСсылке("https://stroizakaz.bitrix24.ru/crm/deal/details/" + НомерСделки + "/");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерСделки(Ссылка)
	НомерСделки = Неопределено;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш6270_Состояние.Состояние КАК Состояние
		|ИЗ
		|	РегистрСведений.Расш6270_Состояние КАК Расш6270_Состояние
		|ГДЕ
		|	Расш6270_Состояние.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		НомерСделки = Выборка.Состояние;
	КонецЕсли;
	
	Возврат НомерСделки;
КонецФункции

&НаСервере
&ИзменениеИКонтроль("ОбработкаВыбораПодборНаСервере")
Процедура Расш6270_ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)

	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект, Истина));
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	СтруктураДействий.Вставить("ЗаполнитьСодержание", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСодержанияУслугиВСтрокеТЧ(Объект, Ложь));
	ДобавитьДействияОбеспеченияНаСервере(СтруктураДействий, "СкладОбязателен,ДатаОтгрузкиОбязательна");
	СтруктураДействий.Вставить("ЗаполнитьПодразделениеВСтрокеТЧ", Новый Структура("Подразделение", Объект.Подразделение));

	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());

	НачалоДня = НачалоДня(ТекущаяДатаСеанса());
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл

		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара,
		"НоменклатураНабора, ХарактеристикаНабора, Номенклатура, Характеристика, Упаковка, Склад, ДатаОтгрузки, 
		|ВидЦены, Цена, КоличествоУпаковок, Количество, Сумма, СуммаНДС, СуммаСНДС, СуммаРучнойСкидки, ПроцентРучнойСкидки, 
		|СрокПоставки, ВариантОбеспечения, Обособленно, Серия");

		#Вставка
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Склад) Тогда
			ТекущаяСтрока.Склад = Объект.Склад;
		КонецЕсли;
		#КонецВставки
		ТекущаяСтрока.ИндексНабора = ?(ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураНабора), 1, 0);

		Если Не ЗначениеЗаполнено(СтрокаТовара.ВариантОбеспечения) Тогда
			ДобавитьДействияОбеспеченияНаСервере(СтруктураДействий, "ВариантОбеспечения");
		КонецЕсли;

		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

		ТекущаяСтрока.ДатаОтгрузки = ОбеспечениеВДокументахСервер.ДатаОтгрузкиОбработкаВыбораПодбор(
		СтрокаТовара.ДатаОтгрузки,
		ТекущаяСтрока.ВариантОбеспечения,
		НачалоДня);

	КонецЦикла;
	ОбеспечениеВДокументахСервер.АктуализироватьДатуОтгрузкиОднойДатой(
	Объект.НеОтгружатьЧастями,
	Объект.ДатаОтгрузки,
	Объект.Товары,
	"ДатаОтгрузки");
	ОбновитьКолонкуДоступноСервер();

	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);

	СкладыСервер.ПриИзмененииСкладаВТабличнойЧасти(Объект.Товары, ТаблицаСкладов, СкладГруппа);
	ВсегоСкладов = ТаблицаСкладов.Количество();
	СкладыКлиентСервер.ОбновитьКартинкуГруппыСкладов(НадписьНесколькоСкладов, Элементы.КартинкаНесколькоСкладов, ВсегоСкладов);

	РассчитатьИтоговыеПоказателиЗаказа(ЭтаФорма);
	МногооборотнаяТараСервер.ОбновитьСостояниеЗаполненияМногооборотнойТары(Объект.СостояниеЗаполненияМногооборотнойТары);

КонецПроцедуры
