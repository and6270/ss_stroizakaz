
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    // Вставить содержимое обработчика.
    СтандартнаяОбработка = Ложь;
    ТаблицаНабораДанных = СформироватьНаСервере();
    	
	//Связь между таблицей значений и именами в СКД
    ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТаблицаНабораДанных", ТаблицаНабораДанных);
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	//Вывод результата ДокументРезультат.Очистить();
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры

Функция СформироватьНаСервере()
	//ВремяНачала = ТекущаяДата();
		
	НачПериода = НачалоМесяца(ЭтотОбъект.НачалоПериода);
	КонПериода = КонецМесяца(ЭтотОбъект.КонецПериода);
	
	ТЗ = Новый ТаблицаЗначений;
	Тз.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Тз.Колонки.Добавить("Количество");
	Тз.Колонки.Добавить("Сумма");
	Тз.Колонки.Добавить("Себестоимость", Новый ОписаниеТипов("Число"));
	
	// Выбераем количество проданных товаров, выручку и их остатки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
		|	СУММА(ВыручкаИСебестоимостьПродаж.Количество) КАК Количество,
		|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручки) КАК СуммаВыручки
		|ПОМЕСТИТЬ ВТ_Реализация
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
		|ГДЕ
		|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачПериода И &КонПериода
		|	И НЕ ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|	И НЕ ВыручкаИСебестоимостьПродаж.РасчетСебестоимости
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК Остаток,
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&КонПериода, Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_Остатки.Номенклатура, ВТ_Реализация.АналитикаУчетаНоменклатурыНоменклатура) КАК ВсяНоменклатура
		|ПОМЕСТИТЬ ВТ_НужнаяНоменклатура
		|ИЗ
		|	ВТ_Реализация КАК ВТ_Реализация
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|		ПО ВТ_Реализация.АналитикаУчетаНоменклатурыНоменклатура = ВТ_Остатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Закупки.Период КАК Период,
		|	Закупки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	Закупки.Количество КАК Количество,
		|	Закупки.Сумма КАК Сумма,
		|	Закупки.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_Закупки
		|ИЗ
		|	РегистрНакопления.Закупки КАК Закупки
		|ГДЕ
		|	(Закупки.ХозяйственнаяОперация, Закупки.АналитикаУчетаНоменклатуры.Номенклатура) В
		|			(ВЫБРАТЬ
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
		|				ВТ_НужнаяНоменклатура.ВсяНоменклатура КАК ВсяНоменклатура
		|			ИЗ
		|				ВТ_НужнаяНоменклатура КАК ВТ_НужнаяНоменклатура)
		|	И Закупки.Период <= &КонПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_Реализация.Количество, 0) КАК РеализацияКоличество,
		|	ЕСТЬNULL(ВТ_Реализация.СуммаВыручки, 0) КАК РеализацияСумма,
		|	ЕСТЬNULL(ВТ_Остатки.Остаток, 0) КАК Остаток,
		|	ЕСТЬNULL(ВТ_Закупки.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
		|	ЕСТЬNULL(ВТ_Закупки.Количество, 0) КАК ЗакупкиКоличество,
		|	ЕСТЬNULL(ВТ_Закупки.Сумма, 0) КАК ЗакупкиСумма,
		|	ВТ_НужнаяНоменклатура.ВсяНоменклатура КАК Номенклатура
		|ИЗ
		|	ВТ_НужнаяНоменклатура КАК ВТ_НужнаяНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реализация КАК ВТ_Реализация
		|		ПО ВТ_НужнаяНоменклатура.ВсяНоменклатура = ВТ_Реализация.АналитикаУчетаНоменклатурыНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|		ПО ВТ_НужнаяНоменклатура.ВсяНоменклатура = ВТ_Остатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Закупки КАК ВТ_Закупки
		|		ПО ВТ_НужнаяНоменклатура.ВсяНоменклатура = ВТ_Закупки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(РеализацияКоличество),
		|	МАКСИМУМ(РеализацияСумма),
		|	МАКСИМУМ(Остаток)
		|ПО
		|	Номенклатура";
	Склады = Новый Массив;
	Склады.Добавить(Справочники.Склады.НайтиПоНаименованию("Алексеевка"));
	Склады.Добавить(Справочники.Склады.НайтиПоНаименованию("Бирюч"));
	Запрос.УстановитьПараметр("НачПериода", НачПериода);
	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("Склады", Склады);
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		НужноеКоличество = ?(ВыборкаНоменклатура.РеализацияКоличество < 0, 0, ВыборкаНоменклатура.РеализацияКоличество)+?(ВыборкаНоменклатура.Остаток < 0, 0, ВыборкаНоменклатура.Остаток);
		Если НужноеКоличество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Стр = ТЗ.Добавить();
		Стр.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Стр.Количество = ВыборкаНоменклатура.РеализацияКоличество;
		Стр.Сумма = ВыборкаНоменклатура.РеализацияСумма;
		Выборка = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.Прямой);
		ТекущееКоличество = 0;
		ТекущаяСумма = 0;
		Себестоимость = 0;
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЗакупкиКоличество < НужноеКоличество Тогда
				ТекущееКоличество = ТекущееКоличество + Выборка.ЗакупкиКоличество;
				ТекущаяСумма  = ТекущаяСумма + Выборка.ЗакупкиСумма;
				НужноеКоличество = НужноеКоличество - Выборка.ЗакупкиКоличество;
			Иначе
				ТекущаяЦена = Выборка.ЗакупкиСумма / Выборка.ЗакупкиКоличество;
				ТекущееКоличество = ТекущееКоличество + НужноеКоличество;
				ТекущаяСумма  = (Выборка.ЗакупкиСумма / Выборка.ЗакупкиКоличество) * НужноеКоличество + ТекущаяСумма;
				НужноеКоличество = 0;
				Прервать;
			КонецЕсли;			
		КонецЦикла;
		Если ТекущееКоличество > 0 Тогда
			Себестоимость = Окр(ТекущаяСумма / ТекущееКоличество,2);
		КонецЕсли;
		Стр.Себестоимость = Себестоимость;
	КонецЦикла;
	
	
		
	ЗапросДетальныеЗаписи = Новый Запрос;
	ЗапросДетальныеЗаписи.Текст = 
		"ВЫБРАТЬ
		|	ВТСебестоимость.Номенклатура КАК Номенклатура,
		|	ВТСебестоимость.Себестоимость КАК Себестоимость
		|ПОМЕСТИТЬ ВТСС
		|ИЗ
		|	&ВТСебестоимость КАК ВТСебестоимость
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
		|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК Сумма,
		|	ВыручкаИСебестоимостьПродаж.Склад КАК Склад,
		|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация КАК ТипДокумента,
		|	ВыручкаИСебестоимостьПродаж.Регистратор.Организация КАК Организация,
		|	ВТСС.Себестоимость КАК Себестоимость,
		|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам.Партнер КАК Партнер
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСС КАК ВТСС
		|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = ВТСС.Номенклатура
		|ГДЕ
		|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачПериода И &КонПериода
		|	И НЕ ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|	И НЕ ВыручкаИСебестоимостьПродаж.РасчетСебестоимости";
	
	ЗапросДетальныеЗаписи.УстановитьПараметр("КонПериода", КонПериода);
	ЗапросДетальныеЗаписи.УстановитьПараметр("НачПериода", НачПериода);
	ЗапросДетальныеЗаписи.УстановитьПараметр("ВТСебестоимость", ТЗ);
	
	ИтоговаяТЗ = ЗапросДетальныеЗаписи.Выполнить().Выгрузить();
	//ВремяВыполнения = ТекущаяДата() - ВремяНачала;
	//Сообщить("Запрос и расчет себестоимости выполнены за: " + ВремяВыполнения + " сек." );
	Возврат ИтоговаяТЗ;
КонецФункции
