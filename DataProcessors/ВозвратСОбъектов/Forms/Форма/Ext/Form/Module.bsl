
&НаКлиенте
Процедура ЗаполнитьЗаказы(Команда)
	// Объект
	Если ЗначениеЗаполнено(Объект.Дата.ДатаНачала)И ЗначениеЗаполнено(Объект.Дата.ДатаОкончания)И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ЗаполнитьЗаказыНаСервере();	
	Иначе
		ПоказатьОповещениеПользователя("Не заполнены параметры");
	КонецЕсли;  
	ЭтаФорма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Группа3;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаказыНаСервере()
	Объект.ДокументыЗаказов.Очистить();	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК Заказ,
		|	ЗаказКлиента.Дата КАК Дата,
		|	Истина КАК Выбран,
		|	ЗаказКлиента.СуммаДокумента КАК Сумма,
		|	ЗаказКлиента.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЗаказКлиента.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("ДатаНачала", Объект.Дата.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.Дата.ДатаОкончания);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.ДокументыЗаказов.Загрузить(РезультатЗапроса.Выгрузить());
	Объект.ДокументыЗаказов.Сортировать("Дата");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИзЗаказовВернулосьКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.ТоварыИзЗаказов.ТекущиеДанные;
	Если ТекДанные.ВернулосьКоличество > ТекДанные.Количество Тогда
		ТекДанные.ВернулосьКоличество = ТекДанные.Количество;
		ПоказатьОповещениеПользователя("Внимание изменено количество");
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УбратьИзЗаказов(Команда)
	Результат = УбратьИзЗаказовНаСервере();
	Результат.СписокДокументов.Показать("Выполнена отмена проведения следующих документов:");
	Результат.УспшныйВозврат.Показать("Выполнена успешный возврат следующих товаров:");
	Результат.Ошибки.Показать("ВНИМАНИЕ! Не удалось выполнить возврат:");
	ЗаполнитьТовары(Команда);
	ЭтаФорма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Группа2;
	КонецПроцедуры

&НаСервере
Функция УбратьИзЗаказовНаСервере()
	Результаты = Новый Структура("СписокДокументов, УспшныйВозврат, Ошибки", Новый ТекстовыйДокумент, Новый ТекстовыйДокумент,Новый ТекстовыйДокумент);
	// 1.Выбрать заполненые заказы.
	СписокЗаказов = Новый Массив;
	Для Каждого строка из Объект.ТоварыИзЗаказов Цикл
		Если строка.ВернулосьКоличество Тогда 
			Если СписокЗаказов.Найти(Строка.ЗаказСсылка) = Неопределено Тогда
				СписокЗаказов.Добавить(Строка.ЗаказСсылка);
				// Сообщить(строка.ЗаказСсылка);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
	// 2.Найти реализации по заказам, отменить их проведение. сообщить их список
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК СсылкаРеализация
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.ЗаказКлиента В(&ЗаказКлиента)";
	
	Запрос.УстановитьПараметр("ЗаказКлиента", СписокЗаказов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.СсылкаРеализация.ПолучитьОбъект(); 
		Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Результаты.СписокДокументов.ДобавитьСтроку(Выборка.СсылкаРеализация);
	КонецЦикла;
	
	// 3.Убрать строки из заказов
	таблВозврат = Объект.ТоварыИзЗаказов.Выгрузить(,"ВернулосьКоличество, КодСтроки, Номенклатура, ЗаказСсылка");
	нулевыеСтроки = таблВозврат.НайтиСтроки(Новый Структура ("ВернулосьКоличество",0));		
	Для Каждого строкаТаблицы из нулевыеСтроки Цикл
		таблВозврат.Удалить(строкаТаблицы);	
	КонецЦикла;
	таблВозврат.Сортировать("КодСтроки Убыв");
	
	Для Каждого Заказ из СписокЗаказов Цикл 
		УбратьТоварыИзЗаказа = таблВозврат.НайтиСтроки(Новый Структура ("ЗаказСсылка",Заказ));
			// Открываем заказ клиента
		ДокЗаказКлиента = Заказ.ПолучитьОбъект();
		Текст = "";
		
		// находим каждую стороку и меняем количество 
		Для Каждого стр из УбратьТоварыИзЗаказа Цикл 
			СтрокаДокумента = ДокЗаказКлиента.товары.НайтиСтроки(Новый Структура("КодСтроки",стр.КодСтроки));
			Если СтрокаДокумента.Количество() <> 0 Тогда
				Если стр.Номенклатура = СтрокаДокумента[0].Номенклатура Тогда
					Если стр.ВернулосьКоличество = СтрокаДокумента[0].Количество Тогда
						Текст = Текст + Символы.ПС + "Удален: " + СтрокаДокумента[0].Номенклатура + " - "+ СтрокаДокумента[0].Количество;
						ДокЗаказКлиента.товары.Удалить(СтрокаДокумента[0]);
					Иначе
						СтрокаДокумента[0].Количество = СтрокаДокумента[0].Количество - стр.ВернулосьКоличество;
						СтрокаДокумента[0].КоличествоУпаковок = СтрокаДокумента[0].Количество; 
						СтрокаДокумента[0].Сумма = СтрокаДокумента[0].Количество * СтрокаДокумента[0].Цена;
						СтрокаДокумента[0].СуммаСНДС  = СтрокаДокумента[0].Сумма;						
						Текст = Текст + Символы.ПС + "Уменьшен: " + СтрокаДокумента[0].Номенклатура + " на "+ стр.ВернулосьКоличество;
					КонецЕсли;
				Иначе 
					Текст = Текст + Символы.ПС + "Не совпали наименования" + стр.Номенклатура + " и " + СтрокаДокумента[0].Номенклатура;					
				КонецЕсли;
			КонецЕсли;
			//сообщить("хо хо");		
		КонецЦикла;
		ДокЗаказКлиента.Комментарий = ДокЗаказКлиента.Комментарий + Символы.ПС + Текст;
		Ошибка = Ложь;
		Попытка
			ДокЗаказКлиента.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Ошибка = Истина;	
		КонецПопытки; 
		Если Ошибка Тогда
			Результаты.Ошибки.ДобавитьСтроку(символы.ПС + "*****Документ :" + ДокЗаказКлиента + "*****" + Текст);	
		Иначе
			Результаты.УспшныйВозврат.ДобавитьСтроку(символы.ПС + "*****Документ :" + ДокЗаказКлиента + "*****" + Текст);	
		КонецЕсли;
	КонецЦикла;
		
	Возврат Результаты;
КонецФункции

&НаСервере
Процедура ЗаполнитьТоварыНаСервере()
	Объект.ТоварыИзЗаказов.Очистить();	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Ссылка КАК ЗаказСсылка,
		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
		|	ЗаказКлиентаТовары.КодСтроки КАК КодСтроки,
		|	ЗаказКлиентаТовары.Количество КАК Количество,
		|	ЗаказКлиентаТовары.ВидЦены КАК ВидЦены,
		|	ЗаказКлиентаТовары.Цена КАК Цена,
		|	ЗаказКлиентаТовары.Сумма КАК Сумма,
		|	ЗаказКлиентаТовары.ВариантОбеспечения КАК ВариантОбеспечения
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка в(&СписокЗаказов)
		|	И ЗаказКлиентаТовары.ВариантОбеспечения = &ВариантОбеспечения
		|	И НЕ ЗаказКлиентаТовары.Отменено";
	
	ВыбаныеЗаказы = Новый Массив();                         
	Для Каждого Стр из Объект.ДокументыЗаказов Цикл
		Если стр.Выбран Тогда
			ВыбаныеЗаказы.Добавить(стр.Заказ);
		КонецЕсли;
	КонецЦикла;	
	Запрос.УстановитьПараметр("СписокЗаказов", ВыбаныеЗаказы);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("ВариантОбеспечения", Перечисления.ВариантыОбеспечения.Отгрузить); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.ТоварыИзЗаказов.Загрузить(РезультатЗапроса.Выгрузить());
	Объект.ТоварыИзЗаказов.Сортировать("Номенклатура, ЗаказСсылка");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТовары(Команда)
	Если Объект.ДокументыЗаказов.Количество() = 0 Тогда
		ЗаполнитьЗаказы(Команда);
		//ЗаполнитьЗаказыНаСервере()	
	КонецЕсли;
	ЗаполнитьТоварыНаСервере();
	ЭтаФорма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Группа2;
КонецПроцедуры
